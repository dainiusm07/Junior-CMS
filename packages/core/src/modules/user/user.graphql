type Query {
  users: [User]
  user(id: Int!): User
}

union UserMutationResponse = User | InputValidationError

type Mutation {
  createUser(input: CreateUserInput!): UserMutationResponse!
  updateUser(id: Int!, input: UpdateUserInput!): UserMutationResponse!
}

type User {
  id: Int!
  email: String!
  firstname: String!
  lastname: String!
  role: Role!
  updatedAt: Date!
  createdAt: Date!
  deletedAt: Date
}

input CreateUserInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  roleId: Int!
}

input UpdateUserInput {
  firstname: String
  lastname: String
  email: String
  password: String
  roleId: Int
}
