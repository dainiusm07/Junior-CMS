# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type RoleEntity {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  permissions: [Permission!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Permission {
  Owner
  CreateUser
  ReadUser
  ReadUsers
  UpdateUser
  DeleteUser
  CreateRole
  ReadRole
  ReadRoles
  UpdateRole
  DeleteRole
}

type UserEntity {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  role: RoleEntity!
}

type ValidationError {
  path: String!
  message: String!
}

type PaginationResult {
  currentPage: Int!
  totalPages: Int!
}

type UserListResponse {
  items: [UserEntity!]!
  totalItems: Int!
  pagination: PaginationResult!
}

type RoleListResponse {
  items: [RoleEntity!]!
  totalItems: Int!
  pagination: PaginationResult!
}

type Query {
  user(id: Float!): UserEntity!
  users(filter: ExtendedUserFilterOptions, page: Int!, limit: Int!): UserListResponse!
  userProfile: UserEntity!
  roles(filter: ExtendedRoleFilterOptions, page: Int!, limit: Int!): RoleListResponse!
  role(id: Float!): RoleEntity!
}

input ExtendedUserFilterOptions {
  id: NumberOperator
  updatedAt: DateOperator
  createdAt: DateOperator
  email: StringOperator
  firstname: StringOperator
  lastname: StringOperator
  deletedAt: DateOperator
  _and: [UserFilterOptions!]
  _or: [UserFilterOptions!]
}

input NumberOperator {
  _gt: Float
  _lt: Float
  _eq: Float
  _in: [Float!]
  _nin: [Float!]
}

input DateOperator {
  _gte: DateTime
  _lte: DateTime
}

input StringOperator {
  _ilike: String
  _eq: String
}

input UserFilterOptions {
  id: NumberOperator
  updatedAt: DateOperator
  createdAt: DateOperator
  email: StringOperator
  firstname: StringOperator
  lastname: StringOperator
  deletedAt: DateOperator
}

input ExtendedRoleFilterOptions {
  id: NumberOperator
  updatedAt: DateOperator
  createdAt: DateOperator
  name: StringOperator
  _and: [RoleFilterOptions!]
  _or: [RoleFilterOptions!]
}

input RoleFilterOptions {
  id: NumberOperator
  updatedAt: DateOperator
  createdAt: DateOperator
  name: StringOperator
}

type Mutation {
  createUser(input: NewUserInput!): UserMutationResponse!
  updateUser(input: UpdateUserInput!, id: Float!): UserMutationResponse!
  userLogin(input: NativeAuthInput!): UserEntity!
  userLogout: Boolean!
  createRole(input: NewRoleInput!): RoleEntity!
  updateRole(input: UpdateRoleInput!, id: Float!): RoleEntity!
}

union UserMutationResponse = UserEntity | InputValidationError

type InputValidationError {
  message: String!
  errorCode: String!
  errors: [ValidationError!]!
}

input NewUserInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  roleId: Int!
}

input UpdateUserInput {
  firstname: String
  lastname: String
  email: String
  password: String
  roleId: Int
}

input NativeAuthInput {
  email: String!
  password: String!
}

input NewRoleInput {
  name: String!
  permissions: [Permission!]!
}

input UpdateRoleInput {
  name: String
  permissions: [Permission!]
}
